from django.db import models
from ..base import BaseModel


class User(BaseModel):
    user_id = models.BigIntegerField(primary_key=True)

    # info from raw full_user
    is_blocked = models.BooleanField(null=True, blank=True)
    can_we_pin_message = models.BooleanField(null=True, blank=True)
    about = models.TextField(max_length=256, null=True, blank=True)
    common_chats_count = models.IntegerField(null=True, blank=True)

    # info from both
    # `profile_photos`

    # info from raw user
    is_empty = models.BooleanField(null=True, blank=True)
    is_mutual_contact = models.BooleanField(null=True, blank=True)
    is_deleted = models.BooleanField(null=True, blank=True)
    is_bot = models.BooleanField(null=True, blank=True)
    is_verified = models.BooleanField(null=True, blank=True)
    is_restricted = models.BooleanField(null=True, blank=True)
    is_scam = models.BooleanField(null=True, blank=True)
    is_support = models.BooleanField(null=True, blank=True)
    first_name = models.CharField(max_length=64, null=True, blank=True)
    last_name = models.CharField(max_length=64, null=True, blank=True)
    username = models.CharField(max_length=32, null=True, blank=True)
    language_code = models.CharField(max_length=20, null=True, blank=True)
    dc_id = models.IntegerField(null=True, blank=True)
    phone_number = models.CharField(max_length=20, null=True, blank=True)
    bot_inline_placeholder = models.CharField(max_length=256, null=True, blank=True)
    bot_can_see_history = models.BooleanField(null=True, blank=True)
    bot_can_request_geo = models.BooleanField(null=True, blank=True)

    ##############################################################
    deleted_at = models.BigIntegerField(null=True, blank=True)

    # `telegram_accounts` : telegram accounts connected to this user
    # `restrictions` : restrictions of this user if it's a bot
    # `admin_log_mentions` : admin logs this user is mentioned in
    # `admin_log_events` : admin logs this user has committed
    # `forwarded_messages` : forwarded messages from this user
    # `saved_messages` : saved messages from this user
    # `sent_messages` : sent messages from this user
    # `message_replies` : replies to this user
    # `via_bot_messages` : messages (inline queries) that were generated by this bot in a chat
    # `mentioned_entities` : entities that this user is mentioned in
    # `chats` : chats this users is/was member of (including state; is current member or left the chat)
    # `chat_peers` : chats with this user fixme: maybe a better name?
    # `promoted_participants` : channel participants promoted by this user
    # `demoted_participants` : channel participants demoted by this user
    # `invited_participants` : channel participants invited by this user
    # `kicked_participants` : channel participants kicked by this user
    # `profile_photos` : profile photos belonging to this user

    class Meta:
        pass

    def __str__(self):
        # return str(self.first_name if self.first_name else "") + str(self.last_name if self.last_name else "")
        return f"{self.first_name if self.first_name else self.last_name if self.last_name else ''} `@{self.username if self.username else self.user_id}`"
